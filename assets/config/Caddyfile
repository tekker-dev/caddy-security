{
	debug
	local_certs
	http_port 8080
	https_port 8443
	admin off

	security {
		credentials root@localhost {
			username root
			password foobar
		}

		messaging email provider localhost-smtp-server {
			address 127.0.0.1:1025
			protocol smtp
			passwordless
			sender root@localhost "My Auth Portal"
			bcc greenpau@localhost
		}

		local identity store localdb {
			realm local
			path assets/config/users.json
			user webadmin {
				name Webmaster
				email webadmin@localhost.localdomain
				password "$2a$10$VLCDIncXaRFshFTGcz2aP.q.gR0O6y1i6mVDks/7WmE3JKLjPD.wu" overwrite
				roles authp/admin authp/user
			}
			user jsmith {
				name John Smith
				email jsmith@localhost.localdomain
				password "My@Password123"
				roles "authp/user" "dash"
			}
			user mstone {
				name Mia Stone
				email mstone@localhost.localdomain
				password "My@Password123"
				roles "authp/user" "dash"
			}
		}

		user registration localdbRegistry {
			dropbox assets/config/registrations.json
			title "User Registration"
			code "NY2020"
			require accept terms
			require domain mx
			email provider localhost-smtp-server
			admin email admin@localhost
			identity store localdb
		}

		authentication portal myportal {
			crypto default token lifetime 3600
			crypto key sign-verify 01ee2688-36e4-47f9-8c06-d18483702520
			enable identity store localdb
			ui {
				links {
					"My Website" "/app" icon "las la-star"
					"My Identity" "/auth/whoami" icon "las la-user"
				}
			}
			transform user {
				match origin local
				action add role authp/user
				ui link "Portal Settings" /auth/settings icon "las la-cog"
			}
			trust logout redirect uri domain prefix google path suffix /
		}

		authorization policy mypolicy {
			set auth url /auth/
			crypto key verify 01ee2688-36e4-47f9-8c06-d18483702520
			allow roles authp/admin authp/user
		}
	}
}

127.0.0.1, localhost {
	route /version* {
		respond * "1.0.0" 200
	}

	route /auth* {
		authenticate * with myportal
	}

	route /favicon.ico {
		respond "not found" 404
	}

	route /xauth* {
		authenticate * with myportal
	}

	route /app* {
		authorize with mypolicy
		file_server {
			root ./assets/config
		}
	}

	route {
		redir https://{hostport}/auth 302
	}
}
